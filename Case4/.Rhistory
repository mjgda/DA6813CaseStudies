error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.*100)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
portfolio.mape
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percen.error:pred2_abs.percen.error)) %>%
ungroup()
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mape <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.*100)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
error.df <-
data.frame(pred1 = predict.rfsrc(forest_acqT,newdata = test.df)$predicted,
pred2 = predict.rfsrc(tuned, newdata = test.df)$predicted,
actual = test.df$acquisition,
customer = test.df$customer) %>%
mutate_at(.funs = funs(abs.error = abs(actual - .),
abs.percent.error = abs(actual - .)/abs(actual)),
.vars = vars(pred1:pred2))
#mae
error.df %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error))
#mape
error.df %>%
summarise_at(.funs = funs(mape = mean(.*100)),
.vars = vars(pred1_abs.percent.error:pred2_abs.percent.error))
# errors from the top customer portfolios
error.df2 <-
error.df %>%
left_join(test.df, "customer") %>%
mutate(customer_portfolio = cut(x = rev <- revenue,
breaks = qu <- quantile(rev, probs = seq(0, 1, 0.25)),
labels = names(qu)[-1],
include.lowest = T))
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.mae <-
error.df2 %>%
group_by(customer_portfolio) %>%
summarise_at(.funs = funs(mae = mean(.*100)),
.vars = vars(pred1_abs.error:pred2_abs.error)) %>%
ungroup()
portfolio.errors <-
portfolio.mae %>%
left_join(portfolio.mape, "customer_portfolio") %>%
gather(key = error_type, value = error, -customer_portfolio) %>%
mutate(error_type2 = ifelse(grepl(pattern = "mae", error_type),"MAE","MAPE"),
model_type = ifelse(grepl(pattern = "pred1", error_type),"Untuned Forest",
ifelse(grepl(pattern = "pred2", error_type),"Tuned Forest",
ifelse(grepl(pattern = "pred3", error_type),"Linear Model",
ifelse(grepl(pattern = "pred4", error_type),"Non-linear Model A",ifelse(grepl(pattern = "pred5", error_type),"Non-linear Model B","Non-linear w interaction"))))),
model_type_reordered = factor(model_type, levels = c("Untuned Forest","Tuned Forest")))
ggplot(portfolio.errors, aes(x = customer_portfolio,
y = error,
color = model_type_reordered,
group = model_type_reordered))+
geom_line(size = 1.02)+
geom_point(shape = 15) +
facet_wrap(~error_type2, scales = "free_y")+
scale_color_brewer(palette = "Set1") +
labs(y = "Error", x = "Customer portfolios")+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Model Type", size = 4,nrow = 2,byrow = TRUE))
error.df2 %>%
group_by(customer_portfolio) %>%
summarise(mean_acquisition_expense = mean(acq_exp),
sum_acquisition_expense = sum(acq_exp))
