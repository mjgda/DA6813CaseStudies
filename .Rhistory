library(rpart.plot)
library(MASS)
library(car)
library(dplyr)
library(lsr)
library(pedometrics)
library(Boruta)
library(InformationValue)
#setwd("~/GitHub/DA6813CaseStudies")
#setwd("~/MSDA/Fall 2021/GitHub")
#setwd("~/MSDA/Fall 2021/GitHub/DA6813CaseStudies")
setwd("~/MSDA/Fall 2021/Data Analytics Applications/Case Study 1/DA6813CaseStudies")
set.seed(12345)
bank<-read.csv('bank-additional.csv',sep=";",stringsAsFactors = T)
sum(is.na(bank))
#duration in column 11
bank<-bank[-11]
#replace month abbreviations with numbers
monthord<-as.character(bank$month)
mn<-c('jan','feb','mar','apr','may','jun','jul',
'aug','sep','oct','nov','dec')
md<-c(1,2,3,4,5,6,7,8,9,10,11,12)
monthord[monthord %in% mn] <- md[match(monthord, mn)]
bank$month<-as.factor(monthord)
#replace day of week abbreviations with numbers
weekord<-as.character(bank$day_of_week)
mn<-c('mon','tue','wed','thu','fri','sat','sun')
md<-c(1,2,3,4,5,6,7)
weekord[weekord %in% mn] <- md[match(weekord, mn)]
bank$day_of_week<-as.factor(weekord)
#reverse levels so "yes" is returned as the positive class to the caret model
bank$y <- factor(bank$y, levels=rev(levels(bank$y)))
#scale and remove variables with near-zero variance(which turns out to be pdays)
params<-preProcess(bank,method=c("scale","center","nzv"))
scaledbank<-predict(params,bank)
#separate the data into train and test sets
train<-sample(nrow(scaledbank),0.7*nrow(scaledbank))
banktrain<-scaledbank[train,]
banktest<-scaledbank[-train,]
#balance the target classes so the
banktrain<-upSample(x=banktrain[,-ncol(banktrain)],y=banktrain$y)
#TC <- trainControl(method = "boot", number=50,classProbs=TRUE,summaryFunction = twoClassSummary)
TC <- trainControl(method="cv", number=5,repeats=3,classProbs=TRUE,summaryFunction = twoClassSummary)
bankrf <- train(Class~age+marital+education+default+loan+contact+job+campaign+day_of_week+housing, data=banktrain,
method = "rf",
metric="ROC",
trControl = TC)
predrf<-predict(bankrf,banktest)
bankrffull <- train(Class~., data=banktrain,
method = "rf",
metric="ROC",
trControl = TC)
predrffull<-predict(bankrffull,banktest)
banktreefull=train(Class~.,data=banktrain, metric="Spec",trControl=TC,method='rpart',
control = rpart.control(cp=0.0001, split=c("gini"),minbucket = 5))
predtreefull<-predict(banktreefull,banktest)
banktree=train(Class~age+marital+education+default+loan+contact+job+campaign+day_of_week+housing,data=banktrain, metric="Spec",trControl=TC,method='rpart',
control = rpart.control(cp=0.0001, split=c("gini"),minbucket = 5))
predtree<-predict(banktree,banktest)
bankLOG <- train(Class~age+marital+education+default+loan+contact+job+campaign+day_of_week+housing, data=banktrain,
method = "glmnet",
metric="ROC",
trControl = TC)
predlog<-predict(bankLOG,banktest)
bankLOGfull <- train(Class~., data=banktrain,
method = "glmnet",
metric="ROC",
trControl = TC)
predlogfull<-predict(bankLOGfull,banktest)
TC <- trainControl(method="cv", number=5,repeats=3,
classProbs=TRUE,summaryFunction = twoClassSummary)
bankrad <- train(Class~., data=banktrain,
method = "svmLinear",
metric="ROC",
trControl = TC,
tuneGrid = expand.grid(C = seq(0.001, 0.1, length = 10)))
predrad<-predict(bankrad,banktest)
banklda <- train(Class~age+job+education+marital+month+day_of_week+previous+contact+campaign+cons.price.idx+cons.conf.idx+poutcome, data=banktrain,method = "lda",metric='ROC',trControl = trainControl(method = "cv",classProbs=TRUE))
predlda<-predict(banklda,banktest)
# SVM Model using Boruta Significant Variables
bankrad_bor <- train(Class~age+job+marital+month+previous+campaign+cons.price.idx+cons.conf.idx+poutcome+emp.var.rate+euribor3m+nr.employed, data=banktrain,
method = "svmLinear",
metric="ROC",
trControl = TC,
tuneLength=8)
predrad_bor<-predict(bankrad_bor,banktest)
# Linear Discriminant Analysis using Significant Variables
banklda_bor =train(Class~age+job+marital+month+previous+campaign+cons.price.idx+cons.conf.idx+poutcome+emp.var.rate+euribor3m+nr.employed, data=banktrain,method = "lda",metric='ROC',trControl = trainControl(method = "cv",classProbs=TRUE))
predlda_bor<-predict(banklda_bor,banktest)
# Random Forest using Significant Variables
bankrf_bor <- train(Class~age+job+marital+month+previous+campaign+cons.price.idx+cons.conf.idx+poutcome+emp.var.rate+euribor3m+nr.employed, data=banktrain,
method = "rf",
metric="ROC",
trControl = trainControl(method="repeatedcv", number=5,repeats = 3,classProbs=TRUE,summaryFunction = twoClassSummary))
predrf_bor<-predict(bankrf_bor,banktest)
# Logistic Regression using Significant Variables
bankLOG_bor <- train(Class~age+job+marital+month+previous+campaign+cons.price.idx+cons.conf.idx+poutcome+emp.var.rate+euribor3m+nr.employed, data=banktrain,
method = "glmnet",
metric="ROC",
trControl = trainControl(method="repeatedcv", number=5,repeats = 3,classProbs=TRUE,summaryFunction = twoClassSummary))
predlog_bor<-predict(bankLOG_bor,banktest)
# Decision Tree Using Significant Variabels
banktree_bor=train(Class~age+job+marital+month+previous+campaign+cons.price.idx+cons.conf.idx+poutcome+emp.var.rate+euribor3m+nr.employed,data=banktrain, metric="Spec",trControl=TC,method='rpart',
control = rpart.control(cp=0.0001, split=c("gini"),minbucket = 5))
predtree_bor<-predict(banktree_bor,banktest)
table(bank$pdays)
fullmodel<-glm(Class~.,banktrain,family=binomial)
stepped<-stepAIC(fullmodel, direction = "both",trace = FALSE)
idx <- order(coef(summary(stepped))[,4])
out <- coef(summary(stepped))[idx,]
head(out,15)
imp <- as.data.frame(varImp(fullmodel))
imp <- data.frame(Importance = imp$Overall,
Variable_Name   = rownames(imp))
head(imp[order(imp$Importance,decreasing = T),],15)
correlate(scaledbank)
stepVIF(glm(y~age+campaign+previous+poutcome+cons.conf.idx+cons.price.idx+euribor3m,scaledbank,family = 'binomial'))
vif(glm(y~age+campaign+previous+poutcome+cons.conf.idx+cons.price.idx+euribor3m+emp.var.rate+nr.employed,scaledbank,family=binomial))
boruta_var_imp_output=Boruta(y~.,data=scaledbank,doTrace=1)
names(boruta_var_imp_output)
boruta_var_imp_output$finalDecision
boruta_signif <- getSelectedAttributes(boruta_var_imp_output, withTentative = TRUE)
print(boruta_signif)
boruta_roug_fix_mod=TentativeRoughFix(boruta_var_imp_output)
# Variable Importance Scores
boruta_imps <- attStats(boruta_roug_fix_mod)
boruta_imps2 = boruta_imps[boruta_imps$decision != 'Rejected', c('meanImp', 'decision')]
boruta_imps2[order(-boruta_imps2$meanImp), ]
plot(boruta_var_imp_output, cex.axis=.7, las=2, xlab="", main="Variable Importance")
par(mfrow=c(3,1))
plot(banktrain$month,banktrain$Class,xlab="Month")
plot(banktrain$job,banktrain$Class,xlab="Job")
plot(banktrain$education,banktrain$Class,xlab="Education")
par(mfrow=c(2,4))
plot(bank$y,bank$contact,ylab="Contact")
plot(bank$y,bank$age,ylab="Age")
plot(bank$y,bank$marital,ylab="Marital Status")
plot(bank$y,bank$campaign,ylab="Campaign")
plot(bank$y,bank$cons.price.idx,ylab="Price Index")
plot(bank$y,bank$cons.conf.idx,ylab="Consumer Confidence")
plot(bank$y,bank$nr.employed,ylab="Number of Employees")
plot(bank$y,bank$emp.var.rate,ylab="Employment Variation Rate")
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda,predlog_bor,predrf_bor,predrf_bor,predrad_bor,predlda_bor)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis","Logistic Regression w/Boruta","Randaom Forest w/Boruta","Decision Tree w/Boruta","Linear SVC w/Boruta","Linear Discriminant Ananlysis W/Boruta")
for(i in 1:13){
print(labelcf[i])
print(confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda,predlog_bor,predrf_bor,predrf_bor,predrad_bor,predlda_bor)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis","Logistic Regression w/Boruta","Randaom Forest w/Boruta","Decision Tree w/Boruta","Linear SVC w/Boruta","Linear Discriminant Ananlysis W/Boruta")
for(i in 1:14){
print(labelcf[i])
print(confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis","Logistic Regression w/Boruta","Randaom Forest w/Boruta","Decision Tree w/Boruta","Linear SVC w/Boruta","Linear Discriminant Ananlysis W/Boruta")
for(i in 1:8){
print(labelcf[i])
print(confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis")
for(i in 1:8){
print(labelcf[i])
print(confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis")
for(i in 1:8){
print(labelcf[i])
print(confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
print("Logistic Regression Variable Importance")
varImp(bankLOGfull)
print("Decision Tree Variable Importance")
varImp(banktreefull)
print("Random Forest Variable Importance")
varImp(bankrffull)
print("Linear SVM Variable Importance")
varImp(bankrad)
print("Linear Discriminant Analysis Importance")
varImp(banklda)
rpart.plot(banktree$finalModel)
rpart.plot(banktreefull$finalModel)
lf<-confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-confusionMatrix(predtreefull,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
str(banktrain)
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest")
for(i in 1:6){
print(labelcf[i])
print(confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest")
for(i in 1:6){
print(labelcf[i])
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest")
for(i in 1:7){
print(labelcf[i])
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis")
for(i in 1:7){
print(labelcf[i])
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis")
for(i in 1:8){
print(labelcf[i])
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda,predlog_bor,predrf_bor,predrf_bor,predrad_bor,predlda_bor)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis","Logistic Regress with sig variables","Decision Tree with sig Variables","Random Forest with sig Variables","Linear SVC with sig Variables","Linear Discriminant Analysis with sig Variables")
for(i in 1:8){
print(labelcf[i])
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
predictions<-list(predlog,predlogfull,predtree,predtreefull,predrad,predrf,predrffull,predlda,predlog_bor,predrf_bor,predrf_bor,predrad_bor,predlda_bor)
#predictions<-list(predlog,predlogfull,predrf,predtree,predrad)
labelcf<-c("Personal Logistic Regression","Full Model Logistic Regression","Personal Decision Tree","Full Decision Tree","Full Linear SVC","Personal Random Forest","Full Random Forest","Linear Discriminant Analysis","Logistic Regress with sig variables","Decision Tree with sig Variables","Random Forest with sig Variables","Linear SVC with sig Variables","Linear Discriminant Analysis with sig Variables")
for(i in 1:13){
print(labelcf[i])
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$table)
print(caret::confusionMatrix(unlist(predictions[i]),banktest$y)$byClass[c(3,11)])
cat("\n")
}
lf<-confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-confusionMatrix(predtreefull,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lf<-confusionMatrix(predlogfull,banktest$y)$byClass[3]
lf
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lf
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(dp,dp),c(dp,0),lwd = 2,lty=2,col="green")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability"),lty=c(1,1,1,2,2,1,1,2,3),lwd = 2,col = c("orange", "darkblue","blue","blue","red","green","black","green","black"))
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability","Sig Logistic Regression","Sig Random Forest","Sig Linear SVM","Sig Decision Tree","Sig LDA"),lty=c(1,1,1,2,2,1,1,2,3,1,1,1,1,1),lwd = 2,col = c("orange", "darkblue","blue","blue","red","green","black","green","black","brown","cyan","grey","maroon","pink"))
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg-sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg_sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
rf_sig<-caret::confusionMatrix(predrf_bor,banktest$y)$byClass[3]
svml_sig<-caret::confusionMatrix(predrad_bor,banktest$y)$byClass[3]
dt_sig<-caret::confusionMatrix(predtree_bor,banktest$y)$byClass[3]
lda_sig<-caret::confusionMatrix(predlda_bor,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability","Sig Logistic Regression","Sig Random Forest","Sig Linear SVM","Sig Decision Tree","Sig LDA"),lty=c(1,1,1,2,2,1,1,2,3,1,1,1,1,1),lwd = 2,col = c("orange", "darkblue","blue","blue","red","green","black","green","black","brown","cyan","grey","maroon","pink"))
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg_sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
rf_sig<-caret::confusionMatrix(predrf_bor,banktest$y)$byClass[3]
svml_sig<-caret::confusionMatrix(predrad_bor,banktest$y)$byClass[3]
dt_sig<-caret::confusionMatrix(predtree_bor,banktest$y)$byClass[3]
lda_sig<-caret::confusionMatrix(predlda_bor,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
lines(c(lg_sig,lg_sig),c(lg_sig,0),lwd = 4,col="brown")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability","Sig Logistic Regression","Sig Random Forest","Sig Linear SVM","Sig Decision Tree","Sig LDA"),lty=c(1,1,1,2,2,1,1,2,3,1,1,1,1,1),lwd = 2,cex=0.7,col = c("orange", "darkblue","blue","blue","red","green","black","green","black","brown","cyan","grey","maroon","pink"))
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg_sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
rf_sig<-caret::confusionMatrix(predrf_bor,banktest$y)$byClass[3]
svml_sig<-caret::confusionMatrix(predrad_bor,banktest$y)$byClass[3]
dt_sig<-caret::confusionMatrix(predtree_bor,banktest$y)$byClass[3]
lda_sig<-caret::confusionMatrix(predlda_bor,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
lines(c(lg_sig,lg_sig),c(lg_sig,0),lwd = 2,col="brown")
lines(c(rf_sig,rf_sig),c(rf_sig,0),lwd = 2,col="cyan")
lines(c(svml_sig,svml_sig),c(svml_sig,0),lwd = 2,col="grey")
lines(c(dt_sig,dt_sig),c(dt_sig,0),lwd = 2,col="maroon")
lines(c(lda_sig,lda_sig),c(lda_sig,0),lwd = 2,col="darkpink")
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg_sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
rf_sig<-caret::confusionMatrix(predrf_bor,banktest$y)$byClass[3]
svml_sig<-caret::confusionMatrix(predrad_bor,banktest$y)$byClass[3]
dt_sig<-caret::confusionMatrix(predtree_bor,banktest$y)$byClass[3]
lda_sig<-caret::confusionMatrix(predlda_bor,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
lines(c(lg_sig,lg_sig),c(lg_sig,0),lwd = 2,col="brown")
lines(c(rf_sig,rf_sig),c(rf_sig,0),lwd = 2,col="cyan")
lines(c(svml_sig,svml_sig),c(svml_sig,0),lwd = 2,col="grey")
lines(c(dt_sig,dt_sig),c(dt_sig,0),lwd = 2,col="maroon")
lines(c(lda_sig,lda_sig),c(lda_sig,0),lwd = 2,col="pink")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability","Sig Logistic Regression","Sig Random Forest","Sig Linear SVM","Sig Decision Tree","Sig LDA"),lty=c(1,1,1,2,2,1,1,2,3,1,1,1,1,1),lwd = 2,cex=0.7,col = c("orange", "darkblue","blue","blue","red","green","black","green","black","brown","cyan","grey","maroon","pink"))
rpart.plot(banktree$finalModel)
rpart.plot(banktreefull$finalModel)
rpart.plot(banktree_bor$finalModel)
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg_sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
rf_sig<-caret::confusionMatrix(predrf_bor,banktest$y)$byClass[3]
svml_sig<-caret::confusionMatrix(predrad_bor,banktest$y)$byClass[3]
dt_sig<-caret::confusionMatrix(predtree_bor,banktest$y)$byClass[3]
lda_sig<-caret::confusionMatrix(predlda_bor,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
lines(c(lg_sig,lg_sig),c(lg_sig,0),lwd = 2,col="brown")
lines(c(rf_sig,rf_sig),c(rf_sig,0),lwd = 2,col="cyan")
lines(c(svml_sig,svml_sig),c(svml_sig,0),lwd = 2,col="grey")
lines(c(dt_sig,dt_sig),c(dt_sig,0),lwd = 2,col="maroon")
lines(c(lda_sig,lda_sig),c(lda_sig,0),lwd = 2,col="pink")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability","Sig Logistic Regression","Sig Random Forest","Sig Linear SVM","Sig Decision Tree","Sig LDA"),lty=c(1,1,1,2,2,1,1,2,3,1,1,1,1,1),lwd = 2,cex=0.7,col = c("orange", "darkblue","blue","blue","red","green","black","green","black","brown","cyan","grey","red","pink"))
lf<-caret::confusionMatrix(predlogfull,banktest$y)$byClass[3]
lp<-caret::confusionMatrix(predlog,banktest$y)$byClass[3]
rf<-caret::confusionMatrix(predrf,banktest$y)$byClass[3]
rff<-caret::confusionMatrix(predrffull,banktest$y)$byClass[3]
svml<-caret::confusionMatrix(predrad,banktest$y)$byClass[3]
dp<-caret::confusionMatrix(predtree,banktest$y)$byClass[3]
dt<-caret::confusionMatrix(predtreefull,banktest$y)$byClass[3]
lda_per<-caret::confusionMatrix(predlda,banktest$y)$byClass[3]
lg_sig<-caret::confusionMatrix(predlog_bor,banktest$y)$byClass[3]
rf_sig<-caret::confusionMatrix(predrf_bor,banktest$y)$byClass[3]
svml_sig<-caret::confusionMatrix(predrad_bor,banktest$y)$byClass[3]
dt_sig<-caret::confusionMatrix(predtree_bor,banktest$y)$byClass[3]
lda_sig<-caret::confusionMatrix(predlda_bor,banktest$y)$byClass[3]
plot(x=1,y=1,ylab="Cost-To-Revenue Ratio",xlab="Call Success Rate",xlim=c(0.035,0.5),ylim=c(0.035,0.5))
abline(0,1,lwd = 2, lty = 3)
lines(c(lf,lf),c(lf,0),lwd = 4,col="orange")
lines(c(lp,lp),c(lp,0),lwd = 2,col="darkblue")
lines(c(rf,rf),c(rf,0),lwd = 2,col="blue")
lines(c(rff,rff),c(rff,0),lwd = 2,lty=2,col="blue")
lines(c(svml,svml),c(svml,0),lty=2,lwd = 2,col="red")
lines(c(dt,dt),c(dt,0),lwd = 2,col="green")
lines(c(dp,dp),c(dp,0),lwd = 2,col="black")
lines(c(lda_per,lda_per),c(lda_per,0),lwd = 2,lty=2,col="green")
lines(c(lg_sig,lg_sig),c(lg_sig,0),lwd = 2,col="brown")
lines(c(rf_sig,rf_sig),c(rf_sig,0),lwd = 2,col="cyan")
lines(c(svml_sig,svml_sig),c(svml_sig,0),lwd = 2,col="grey")
lines(c(dt_sig,dt_sig),c(dt_sig,0),lwd = 2,col="red")
lines(c(lda_sig,lda_sig),c(lda_sig,0),lwd = 2,col="pink")
legend("topleft",legend=c("Full Logistic Regression","Personal LogReg","Personal Random Forest","Full Random Forest","Linear SVM","Full Decision Tree","Personal Decision Tree","LDA","Break-even Profitability","Sig Logistic Regression","Sig Random Forest","Sig Linear SVM","Sig Decision Tree","Sig LDA"),lty=c(1,1,1,2,2,1,1,2,3,1,1,1,1,1),lwd = 2,cex=0.7,col = c("orange", "darkblue","blue","blue","red","green","black","green","black","brown","cyan","grey","red","pink"))
print("Logistic Regression Variable Importance")
varImp(bankLOGfull)
print("Decision Tree Variable Importance")
varImp(banktreefull)
print("Random Forest Variable Importance")
varImp(bankrffull)
print("Linear SVM Variable Importance")
varImp(bankrad)
print("Linear Discriminant Analysis Importance")
varImp(banklda)
varImp(banklda_bor)
varImp(bankLOG_bor)
